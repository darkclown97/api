# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from services.ecommerce.v1 import orders_pb2 as services_dot_ecommerce_dot_v1_dot_orders__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in services/ecommerce/v1/orders_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOrder = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/CreateOrder',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CreateOrderResponse.FromString,
                _registered_method=True)
        self.ListBuyerOrders = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/ListBuyerOrders',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersResponse.FromString,
                _registered_method=True)
        self.ListSellerOrders = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/ListSellerOrders',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersResponse.FromString,
                _registered_method=True)
        self.GetBuyerOrders = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/GetBuyerOrders',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersResponse.FromString,
                _registered_method=True)
        self.GetSellerOrders = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/GetSellerOrders',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersResponse.FromString,
                _registered_method=True)
        self.UpdateOrderPayment = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/UpdateOrderPayment',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.UpdateOrderPaymentRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.UpdateOrderPaymentResponse.FromString,
                _registered_method=True)
        self.CancelOrder = channel.unary_unary(
                '/services.ecommerce.v1.orders.OrderService/CancelOrder',
                request_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CancelOrderRequest.SerializeToString,
                response_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CancelOrderResponse.FromString,
                _registered_method=True)


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBuyerOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSellerOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyerOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellerOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrderPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CreateOrderRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CreateOrderResponse.SerializeToString,
            ),
            'ListBuyerOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuyerOrders,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersResponse.SerializeToString,
            ),
            'ListSellerOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSellerOrders,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersResponse.SerializeToString,
            ),
            'GetBuyerOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyerOrders,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersResponse.SerializeToString,
            ),
            'GetSellerOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellerOrders,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersResponse.SerializeToString,
            ),
            'UpdateOrderPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrderPayment,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.UpdateOrderPaymentRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.UpdateOrderPaymentResponse.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CancelOrderRequest.FromString,
                    response_serializer=services_dot_ecommerce_dot_v1_dot_orders__pb2.CancelOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'services.ecommerce.v1.orders.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('services.ecommerce.v1.orders.OrderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/CreateOrder',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.CreateOrderRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.CreateOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBuyerOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/ListBuyerOrders',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListSellerOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/ListSellerOrders',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.ListOrdersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBuyerOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/GetBuyerOrders',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSellerOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/GetSellerOrders',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.GetOrdersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOrderPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/UpdateOrderPayment',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.UpdateOrderPaymentRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.UpdateOrderPaymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/services.ecommerce.v1.orders.OrderService/CancelOrder',
            services_dot_ecommerce_dot_v1_dot_orders__pb2.CancelOrderRequest.SerializeToString,
            services_dot_ecommerce_dot_v1_dot_orders__pb2.CancelOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

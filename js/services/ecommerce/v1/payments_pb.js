// source: services/ecommerce/v1/payments.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_messages_pb = require('../../../common/messages_pb.js');
goog.object.extend(proto, common_messages_pb);
goog.exportSymbol('proto.services.ecommerce.v1.payments.InitiatePaymentRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.InitiatePaymentResponse', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.InitiateRefundRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.InitiateRefundResponse', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.Payment', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.PaymentInternal', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.PaymentMethod', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.PaymentStatus', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.Payment.displayName = 'proto.services.ecommerce.v1.payments.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.InitiatePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.InitiatePaymentRequest.displayName = 'proto.services.ecommerce.v1.payments.InitiatePaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.InitiatePaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.InitiatePaymentResponse.displayName = 'proto.services.ecommerce.v1.payments.InitiatePaymentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.displayName = 'proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.displayName = 'proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.InitiateRefundRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.InitiateRefundRequest.displayName = 'proto.services.ecommerce.v1.payments.InitiateRefundRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.InitiateRefundResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.InitiateRefundResponse.displayName = 'proto.services.ecommerce.v1.payments.InitiateRefundResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.payments.PaymentInternal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.payments.PaymentInternal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.payments.PaymentInternal.displayName = 'proto.services.ecommerce.v1.payments.PaymentInternal';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    meta: (f = msg.getMeta()) && common_messages_pb.Meta.toObject(includeInstance, f),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.Payment}
 */
proto.services.ecommerce.v1.payments.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.Payment;
  return proto.services.ecommerce.v1.payments.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.Payment}
 */
proto.services.ecommerce.v1.payments.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_messages_pb.Meta;
      reader.readMessage(value,common_messages_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {!proto.services.ecommerce.v1.payments.PaymentMethod} */ (reader.readEnum());
      msg.setPaymentMethod(value);
      break;
    case 2:
      var value = /** @type {!proto.services.ecommerce.v1.payments.PaymentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_messages_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getPaymentMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional common.messages.Meta meta = 1;
 * @return {?proto.common.messages.Meta}
 */
proto.services.ecommerce.v1.payments.Payment.prototype.getMeta = function() {
  return /** @type{?proto.common.messages.Meta} */ (
    jspb.Message.getWrapperField(this, common_messages_pb.Meta, 1));
};


/**
 * @param {?proto.common.messages.Meta|undefined} value
 * @return {!proto.services.ecommerce.v1.payments.Payment} returns this
*/
proto.services.ecommerce.v1.payments.Payment.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.ecommerce.v1.payments.Payment} returns this
 */
proto.services.ecommerce.v1.payments.Payment.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.ecommerce.v1.payments.Payment.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PaymentMethod payment_method = 3;
 * @return {!proto.services.ecommerce.v1.payments.PaymentMethod}
 */
proto.services.ecommerce.v1.payments.Payment.prototype.getPaymentMethod = function() {
  return /** @type {!proto.services.ecommerce.v1.payments.PaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.services.ecommerce.v1.payments.PaymentMethod} value
 * @return {!proto.services.ecommerce.v1.payments.Payment} returns this
 */
proto.services.ecommerce.v1.payments.Payment.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional PaymentStatus status = 2;
 * @return {!proto.services.ecommerce.v1.payments.PaymentStatus}
 */
proto.services.ecommerce.v1.payments.Payment.prototype.getStatus = function() {
  return /** @type {!proto.services.ecommerce.v1.payments.PaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.services.ecommerce.v1.payments.PaymentStatus} value
 * @return {!proto.services.ecommerce.v1.payments.Payment} returns this
 */
proto.services.ecommerce.v1.payments.Payment.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.InitiatePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.InitiatePaymentRequest;
  return proto.services.ecommerce.v1.payments.InitiatePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {!proto.services.ecommerce.v1.payments.PaymentMethod} */ (reader.readEnum());
      msg.setPaymentMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.InitiatePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional PaymentMethod payment_method = 3;
 * @return {!proto.services.ecommerce.v1.payments.PaymentMethod}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.getPaymentMethod = function() {
  return /** @type {!proto.services.ecommerce.v1.payments.PaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.services.ecommerce.v1.payments.PaymentMethod} value
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiatePaymentRequest.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.InitiatePaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.InitiatePaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentResponse}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.InitiatePaymentResponse;
  return proto.services.ecommerce.v1.payments.InitiatePaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.InitiatePaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentResponse}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.InitiatePaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.InitiatePaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string payment_id = 1;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.InitiatePaymentResponse} returns this
 */
proto.services.ecommerce.v1.payments.InitiatePaymentResponse.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest;
  return proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {!proto.services.ecommerce.v1.payments.PaymentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string payment_id = 1;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest} returns this
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PaymentStatus status = 2;
 * @return {!proto.services.ecommerce.v1.payments.PaymentStatus}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.prototype.getStatus = function() {
  return /** @type {!proto.services.ecommerce.v1.payments.PaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.services.ecommerce.v1.payments.PaymentStatus} value
 * @return {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest} returns this
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse;
  return proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.UpdatePaymentStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.InitiateRefundRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sellerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.InitiateRefundRequest;
  return proto.services.ecommerce.v1.payments.InitiateRefundRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellerId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.InitiateRefundRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSellerId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_id = 2;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string seller_id = 3;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.getSellerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.setSellerId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 quantity = 4;
 * @return {number}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double amount = 5;
 * @return {number}
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundRequest} returns this
 */
proto.services.ecommerce.v1.payments.InitiateRefundRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.InitiateRefundResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.InitiateRefundResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundResponse}
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.InitiateRefundResponse;
  return proto.services.ecommerce.v1.payments.InitiateRefundResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.InitiateRefundResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.InitiateRefundResponse}
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.InitiateRefundResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.InitiateRefundResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.InitiateRefundResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.payments.PaymentInternal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.payments.PaymentInternal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.PaymentInternal.toObject = function(includeInstance, msg) {
  var f, obj = {
    meta: (f = msg.getMeta()) && common_messages_pb.Meta.toObject(includeInstance, f),
    orderId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sellerId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 7, 0),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.payments.PaymentInternal;
  return proto.services.ecommerce.v1.payments.PaymentInternal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.payments.PaymentInternal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_messages_pb.Meta;
      reader.readMessage(value,common_messages_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellerId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 7:
      var value = /** @type {!proto.services.ecommerce.v1.payments.PaymentMethod} */ (reader.readEnum());
      msg.setPaymentMethod(value);
      break;
    case 8:
      var value = /** @type {!proto.services.ecommerce.v1.payments.PaymentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.payments.PaymentInternal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.payments.PaymentInternal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.payments.PaymentInternal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_messages_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSellerId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional common.messages.Meta meta = 1;
 * @return {?proto.common.messages.Meta}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getMeta = function() {
  return /** @type{?proto.common.messages.Meta} */ (
    jspb.Message.getWrapperField(this, common_messages_pb.Meta, 1));
};


/**
 * @param {?proto.common.messages.Meta|undefined} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
*/
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string order_id = 2;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string product_id = 3;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string seller_id = 4;
 * @return {string}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getSellerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setSellerId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 quantity = 5;
 * @return {number}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double amount = 6;
 * @return {number}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional PaymentMethod payment_method = 7;
 * @return {!proto.services.ecommerce.v1.payments.PaymentMethod}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getPaymentMethod = function() {
  return /** @type {!proto.services.ecommerce.v1.payments.PaymentMethod} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.services.ecommerce.v1.payments.PaymentMethod} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional PaymentStatus status = 8;
 * @return {!proto.services.ecommerce.v1.payments.PaymentStatus}
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.getStatus = function() {
  return /** @type {!proto.services.ecommerce.v1.payments.PaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.services.ecommerce.v1.payments.PaymentStatus} value
 * @return {!proto.services.ecommerce.v1.payments.PaymentInternal} returns this
 */
proto.services.ecommerce.v1.payments.PaymentInternal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * @enum {number}
 */
proto.services.ecommerce.v1.payments.PaymentMethod = {
  UPI: 0,
  CREDIT_CARD: 1,
  DEBIT_CARD: 2,
  NET_BANKING: 3,
  PAY_ON_DELIVERY: 4
};

/**
 * @enum {number}
 */
proto.services.ecommerce.v1.payments.PaymentStatus = {
  PAYMENT_STATUS_INITIATED: 0,
  PAYMENT_STATUS_PENDING: 1,
  PAYMENT_STATUS_FULFILLED: 2,
  PAYMENT_STATUS_FAILED: 3,
  PAYMENT_STATUS_REFUND_INITIATED: 4,
  PAYMENT_STATUS_REFUND_PENDING: 5,
  PAYMENT_STATUS_REFUND_FULFILLED: 6
};

goog.object.extend(exports, proto.services.ecommerce.v1.payments);

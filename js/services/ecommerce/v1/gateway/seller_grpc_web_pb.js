/**
 * @fileoverview gRPC-Web generated client stub for services.ecommerce.v1.gateway
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: services/ecommerce/v1/gateway/seller.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var common_messages_pb = require('../../../../common/messages_pb.js')

var services_ecommerce_v1_products_pb = require('../../../../services/ecommerce/v1/products_pb.js')

var services_ecommerce_v1_orders_pb = require('../../../../services/ecommerce/v1/orders_pb.js')
const proto = {};
proto.services = {};
proto.services.ecommerce = {};
proto.services.ecommerce.v1 = {};
proto.services.ecommerce.v1.gateway = require('./seller_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.ListProductsRequest,
 *   !proto.services.ecommerce.v1.gateway.ListProductsResponse>}
 */
const methodDescriptor_SellerGateway_ListProducts = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/ListProducts',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.ListProductsRequest,
  proto.services.ecommerce.v1.gateway.ListProductsResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.ListProductsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.ListProductsResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.ListProductsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.ListProductsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.ListProductsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.listProducts =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/ListProducts',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_ListProducts,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.ListProductsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.ListProductsResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.listProducts =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/ListProducts',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_ListProducts);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.GetProductRequest,
 *   !proto.services.ecommerce.v1.gateway.GetProductResponse>}
 */
const methodDescriptor_SellerGateway_GetProduct = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/GetProduct',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.GetProductRequest,
  proto.services.ecommerce.v1.gateway.GetProductResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.GetProductRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.GetProductResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.GetProductRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.GetProductResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.GetProductResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.getProduct =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/GetProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_GetProduct,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.GetProductRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.GetProductResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.getProduct =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/GetProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_GetProduct);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.CreateProductRequest,
 *   !proto.services.ecommerce.v1.gateway.CreateProductResponse>}
 */
const methodDescriptor_SellerGateway_CreateProduct = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/CreateProduct',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.CreateProductRequest,
  proto.services.ecommerce.v1.gateway.CreateProductResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.CreateProductRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.CreateProductResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.CreateProductRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.CreateProductResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.CreateProductResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.createProduct =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/CreateProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_CreateProduct,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.CreateProductRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.CreateProductResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.createProduct =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/CreateProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_CreateProduct);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.UpdateProductRequest,
 *   !proto.services.ecommerce.v1.gateway.UpdateProductResponse>}
 */
const methodDescriptor_SellerGateway_UpdateProduct = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/UpdateProduct',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.UpdateProductRequest,
  proto.services.ecommerce.v1.gateway.UpdateProductResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.UpdateProductRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.UpdateProductResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.UpdateProductRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.UpdateProductResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.UpdateProductResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.updateProduct =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/UpdateProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_UpdateProduct,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.UpdateProductRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.UpdateProductResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.updateProduct =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/UpdateProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_UpdateProduct);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.DeleteProductRequest,
 *   !proto.services.ecommerce.v1.gateway.DeleteProductResponse>}
 */
const methodDescriptor_SellerGateway_DeleteProduct = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/DeleteProduct',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.DeleteProductRequest,
  proto.services.ecommerce.v1.gateway.DeleteProductResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.DeleteProductRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.DeleteProductResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.DeleteProductRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.DeleteProductResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.DeleteProductResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.deleteProduct =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/DeleteProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_DeleteProduct,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.DeleteProductRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.DeleteProductResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.deleteProduct =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/DeleteProduct',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_DeleteProduct);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.ListOrdersRequest,
 *   !proto.services.ecommerce.v1.gateway.ListOrdersResponse>}
 */
const methodDescriptor_SellerGateway_ListOrders = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/ListOrders',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.ListOrdersRequest,
  proto.services.ecommerce.v1.gateway.ListOrdersResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.ListOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.ListOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.ListOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.ListOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.ListOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.listOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/ListOrders',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_ListOrders,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.ListOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.ListOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.listOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/ListOrders',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_ListOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.gateway.GetOrdersRequest,
 *   !proto.services.ecommerce.v1.gateway.GetOrdersResponse>}
 */
const methodDescriptor_SellerGateway_GetOrders = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.gateway.SellerGateway/GetOrders',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.gateway.GetOrdersRequest,
  proto.services.ecommerce.v1.gateway.GetOrdersResponse,
  /**
   * @param {!proto.services.ecommerce.v1.gateway.GetOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.gateway.GetOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.gateway.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.gateway.GetOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.gateway.GetOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.gateway.SellerGatewayClient.prototype.getOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/GetOrders',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_GetOrders,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.gateway.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.gateway.GetOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.gateway.SellerGatewayPromiseClient.prototype.getOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.gateway.SellerGateway/GetOrders',
      request,
      metadata || {},
      methodDescriptor_SellerGateway_GetOrders);
};


module.exports = proto.services.ecommerce.v1.gateway;


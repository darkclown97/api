// source: services/ecommerce/v1/cart.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_messages_pb = require('../../../common/messages_pb.js');
goog.object.extend(proto, common_messages_pb);
var services_ecommerce_v1_products_pb = require('../../../services/ecommerce/v1/products_pb.js');
goog.object.extend(proto, services_ecommerce_v1_products_pb);
goog.exportSymbol('proto.services.ecommerce.v1.cart.AddToCartRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.AddToCartResponse', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.CartInternal', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.CartItem', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.ClearCartRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.ClearCartResponse', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.RemoveFromCartRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.RemoveFromCartResponse', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.ViewCartRequest', null, global);
goog.exportSymbol('proto.services.ecommerce.v1.cart.ViewCartResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.AddToCartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.AddToCartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.AddToCartRequest.displayName = 'proto.services.ecommerce.v1.cart.AddToCartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.AddToCartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.AddToCartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.AddToCartResponse.displayName = 'proto.services.ecommerce.v1.cart.AddToCartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.RemoveFromCartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.RemoveFromCartRequest.displayName = 'proto.services.ecommerce.v1.cart.RemoveFromCartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.RemoveFromCartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.RemoveFromCartResponse.displayName = 'proto.services.ecommerce.v1.cart.RemoveFromCartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.ClearCartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.ClearCartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.ClearCartRequest.displayName = 'proto.services.ecommerce.v1.cart.ClearCartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.ClearCartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.ClearCartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.ClearCartResponse.displayName = 'proto.services.ecommerce.v1.cart.ClearCartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.ViewCartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.ViewCartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.ViewCartRequest.displayName = 'proto.services.ecommerce.v1.cart.ViewCartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.CartItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.CartItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.CartItem.displayName = 'proto.services.ecommerce.v1.cart.CartItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.ViewCartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.ecommerce.v1.cart.ViewCartResponse.repeatedFields_, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.ViewCartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.ViewCartResponse.displayName = 'proto.services.ecommerce.v1.cart.ViewCartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ecommerce.v1.cart.CartInternal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.ecommerce.v1.cart.CartInternal.repeatedFields_, null);
};
goog.inherits(proto.services.ecommerce.v1.cart.CartInternal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ecommerce.v1.cart.CartInternal.displayName = 'proto.services.ecommerce.v1.cart.CartInternal';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.AddToCartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.AddToCartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.AddToCartRequest}
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.AddToCartRequest;
  return proto.services.ecommerce.v1.cart.AddToCartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.AddToCartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.AddToCartRequest}
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.AddToCartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.AddToCartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.cart.AddToCartRequest} returns this
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.AddToCartRequest} returns this
 */
proto.services.ecommerce.v1.cart.AddToCartRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.AddToCartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.AddToCartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCartProducts: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.AddToCartResponse}
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.AddToCartResponse;
  return proto.services.ecommerce.v1.cart.AddToCartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.AddToCartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.AddToCartResponse}
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCartProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.AddToCartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.AddToCartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalCartProducts();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 total_cart_products = 1;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.prototype.getTotalCartProducts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.AddToCartResponse} returns this
 */
proto.services.ecommerce.v1.cart.AddToCartResponse.prototype.setTotalCartProducts = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.RemoveFromCartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.RemoveFromCartRequest;
  return proto.services.ecommerce.v1.cart.RemoveFromCartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.RemoveFromCartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest} returns this
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartRequest} returns this
 */
proto.services.ecommerce.v1.cart.RemoveFromCartRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.RemoveFromCartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.RemoveFromCartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCartProducts: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartResponse}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.RemoveFromCartResponse;
  return proto.services.ecommerce.v1.cart.RemoveFromCartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.RemoveFromCartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartResponse}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCartProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.RemoveFromCartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.RemoveFromCartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalCartProducts();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 total_cart_products = 1;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.prototype.getTotalCartProducts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.RemoveFromCartResponse} returns this
 */
proto.services.ecommerce.v1.cart.RemoveFromCartResponse.prototype.setTotalCartProducts = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.ClearCartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.ClearCartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.ClearCartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ClearCartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.ClearCartRequest}
 */
proto.services.ecommerce.v1.cart.ClearCartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.ClearCartRequest;
  return proto.services.ecommerce.v1.cart.ClearCartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.ClearCartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.ClearCartRequest}
 */
proto.services.ecommerce.v1.cart.ClearCartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.ClearCartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.ClearCartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.ClearCartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ClearCartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.ClearCartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.ClearCartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.ClearCartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ClearCartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.ClearCartResponse}
 */
proto.services.ecommerce.v1.cart.ClearCartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.ClearCartResponse;
  return proto.services.ecommerce.v1.cart.ClearCartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.ClearCartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.ClearCartResponse}
 */
proto.services.ecommerce.v1.cart.ClearCartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.ClearCartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.ClearCartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.ClearCartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ClearCartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.ViewCartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.ViewCartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.ViewCartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ViewCartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.ViewCartRequest}
 */
proto.services.ecommerce.v1.cart.ViewCartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.ViewCartRequest;
  return proto.services.ecommerce.v1.cart.ViewCartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.ViewCartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.ViewCartRequest}
 */
proto.services.ecommerce.v1.cart.ViewCartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.ViewCartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.ViewCartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.ViewCartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ViewCartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.CartItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.CartItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.CartItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    products: (f = msg.getProducts()) && services_ecommerce_v1_products_pb.Product.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.CartItem}
 */
proto.services.ecommerce.v1.cart.CartItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.CartItem;
  return proto.services.ecommerce.v1.cart.CartItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.CartItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.CartItem}
 */
proto.services.ecommerce.v1.cart.CartItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_ecommerce_v1_products_pb.Product;
      reader.readMessage(value,services_ecommerce_v1_products_pb.Product.deserializeBinaryFromReader);
      msg.setProducts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.CartItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.CartItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.CartItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProducts();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_ecommerce_v1_products_pb.Product.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional services.ecommerce.v1.products.Product products = 1;
 * @return {?proto.services.ecommerce.v1.products.Product}
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.getProducts = function() {
  return /** @type{?proto.services.ecommerce.v1.products.Product} */ (
    jspb.Message.getWrapperField(this, services_ecommerce_v1_products_pb.Product, 1));
};


/**
 * @param {?proto.services.ecommerce.v1.products.Product|undefined} value
 * @return {!proto.services.ecommerce.v1.cart.CartItem} returns this
*/
proto.services.ecommerce.v1.cart.CartItem.prototype.setProducts = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.ecommerce.v1.cart.CartItem} returns this
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.clearProducts = function() {
  return this.setProducts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.hasProducts = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.CartItem} returns this
 */
proto.services.ecommerce.v1.cart.CartItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.ViewCartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.ViewCartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.services.ecommerce.v1.cart.CartItem.toObject, includeInstance),
    totalCartProducts: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.ViewCartResponse}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.ViewCartResponse;
  return proto.services.ecommerce.v1.cart.ViewCartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.ViewCartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.ViewCartResponse}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.ecommerce.v1.cart.CartItem;
      reader.readMessage(value,proto.services.ecommerce.v1.cart.CartItem.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCartProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.ViewCartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.ViewCartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.ecommerce.v1.cart.CartItem.serializeBinaryToWriter
    );
  }
  f = message.getTotalCartProducts();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated CartItem products = 1;
 * @return {!Array<!proto.services.ecommerce.v1.cart.CartItem>}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.services.ecommerce.v1.cart.CartItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.ecommerce.v1.cart.CartItem, 1));
};


/**
 * @param {!Array<!proto.services.ecommerce.v1.cart.CartItem>} value
 * @return {!proto.services.ecommerce.v1.cart.ViewCartResponse} returns this
*/
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.ecommerce.v1.cart.CartItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.ecommerce.v1.cart.CartItem}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.ecommerce.v1.cart.CartItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.ecommerce.v1.cart.ViewCartResponse} returns this
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional int32 total_cart_products = 2;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.getTotalCartProducts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.ViewCartResponse} returns this
 */
proto.services.ecommerce.v1.cart.ViewCartResponse.prototype.setTotalCartProducts = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.ecommerce.v1.cart.CartInternal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ecommerce.v1.cart.CartInternal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ecommerce.v1.cart.CartInternal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.CartInternal.toObject = function(includeInstance, msg) {
  var f, obj = {
    meta: (f = msg.getMeta()) && common_messages_pb.Meta.toObject(includeInstance, f),
    buyerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.services.ecommerce.v1.cart.CartItem.toObject, includeInstance),
    totalPrice: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ecommerce.v1.cart.CartInternal}
 */
proto.services.ecommerce.v1.cart.CartInternal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ecommerce.v1.cart.CartInternal;
  return proto.services.ecommerce.v1.cart.CartInternal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ecommerce.v1.cart.CartInternal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ecommerce.v1.cart.CartInternal}
 */
proto.services.ecommerce.v1.cart.CartInternal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_messages_pb.Meta;
      reader.readMessage(value,common_messages_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerId(value);
      break;
    case 3:
      var value = new proto.services.ecommerce.v1.cart.CartItem;
      reader.readMessage(value,proto.services.ecommerce.v1.cart.CartItem.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ecommerce.v1.cart.CartInternal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ecommerce.v1.cart.CartInternal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ecommerce.v1.cart.CartInternal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_messages_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getBuyerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.services.ecommerce.v1.cart.CartItem.serializeBinaryToWriter
    );
  }
  f = message.getTotalPrice();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional common.messages.Meta meta = 1;
 * @return {?proto.common.messages.Meta}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.getMeta = function() {
  return /** @type{?proto.common.messages.Meta} */ (
    jspb.Message.getWrapperField(this, common_messages_pb.Meta, 1));
};


/**
 * @param {?proto.common.messages.Meta|undefined} value
 * @return {!proto.services.ecommerce.v1.cart.CartInternal} returns this
*/
proto.services.ecommerce.v1.cart.CartInternal.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.ecommerce.v1.cart.CartInternal} returns this
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string buyer_id = 2;
 * @return {string}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.getBuyerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ecommerce.v1.cart.CartInternal} returns this
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.setBuyerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated CartItem products = 3;
 * @return {!Array<!proto.services.ecommerce.v1.cart.CartItem>}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.services.ecommerce.v1.cart.CartItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.ecommerce.v1.cart.CartItem, 3));
};


/**
 * @param {!Array<!proto.services.ecommerce.v1.cart.CartItem>} value
 * @return {!proto.services.ecommerce.v1.cart.CartInternal} returns this
*/
proto.services.ecommerce.v1.cart.CartInternal.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.services.ecommerce.v1.cart.CartItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.ecommerce.v1.cart.CartItem}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.services.ecommerce.v1.cart.CartItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.ecommerce.v1.cart.CartInternal} returns this
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional int32 total_price = 4;
 * @return {number}
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.getTotalPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ecommerce.v1.cart.CartInternal} returns this
 */
proto.services.ecommerce.v1.cart.CartInternal.prototype.setTotalPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.services.ecommerce.v1.cart);

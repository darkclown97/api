/**
 * @fileoverview gRPC-Web generated client stub for services.ecommerce.v1.orders
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: services/ecommerce/v1/orders.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var common_messages_pb = require('../../../common/messages_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var services_ecommerce_v1_payments_pb = require('../../../services/ecommerce/v1/payments_pb.js')

var services_ecommerce_v1_products_pb = require('../../../services/ecommerce/v1/products_pb.js')
const proto = {};
proto.services = {};
proto.services.ecommerce = {};
proto.services.ecommerce.v1 = {};
proto.services.ecommerce.v1.orders = require('./orders_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.services.ecommerce.v1.orders.OrderServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.CreateOrderRequest,
 *   !proto.services.ecommerce.v1.orders.CreateOrderResponse>}
 */
const methodDescriptor_OrderService_CreateOrder = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/CreateOrder',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.CreateOrderRequest,
  proto.services.ecommerce.v1.orders.CreateOrderResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.CreateOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.CreateOrderResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.CreateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.CreateOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.CreateOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.createOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/CreateOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CreateOrder,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.CreateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.CreateOrderResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.createOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/CreateOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CreateOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.ListOrdersRequest,
 *   !proto.services.ecommerce.v1.orders.ListOrdersResponse>}
 */
const methodDescriptor_OrderService_ListBuyerOrders = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/ListBuyerOrders',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.ListOrdersRequest,
  proto.services.ecommerce.v1.orders.ListOrdersResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.ListOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.ListOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.ListOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.ListOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.ListOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.listBuyerOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/ListBuyerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_ListBuyerOrders,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.ListOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.ListOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.listBuyerOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/ListBuyerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_ListBuyerOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.ListOrdersRequest,
 *   !proto.services.ecommerce.v1.orders.ListOrdersResponse>}
 */
const methodDescriptor_OrderService_ListSellerOrders = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/ListSellerOrders',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.ListOrdersRequest,
  proto.services.ecommerce.v1.orders.ListOrdersResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.ListOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.ListOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.ListOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.ListOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.ListOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.listSellerOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/ListSellerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_ListSellerOrders,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.ListOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.ListOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.listSellerOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/ListSellerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_ListSellerOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.GetOrdersRequest,
 *   !proto.services.ecommerce.v1.orders.GetOrdersResponse>}
 */
const methodDescriptor_OrderService_GetBuyerOrders = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/GetBuyerOrders',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.GetOrdersRequest,
  proto.services.ecommerce.v1.orders.GetOrdersResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.GetOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.GetOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.GetOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.GetOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.getBuyerOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/GetBuyerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetBuyerOrders,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.GetOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.getBuyerOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/GetBuyerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetBuyerOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.GetOrdersRequest,
 *   !proto.services.ecommerce.v1.orders.GetOrdersResponse>}
 */
const methodDescriptor_OrderService_GetSellerOrders = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/GetSellerOrders',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.GetOrdersRequest,
  proto.services.ecommerce.v1.orders.GetOrdersResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.GetOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.GetOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.GetOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.GetOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.getSellerOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/GetSellerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetSellerOrders,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.GetOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.getSellerOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/GetSellerOrders',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetSellerOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.UpdateOrderPaymentRequest,
 *   !proto.services.ecommerce.v1.orders.UpdateOrderPaymentResponse>}
 */
const methodDescriptor_OrderService_UpdateOrderPayment = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/UpdateOrderPayment',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.UpdateOrderPaymentRequest,
  proto.services.ecommerce.v1.orders.UpdateOrderPaymentResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.UpdateOrderPaymentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.UpdateOrderPaymentResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.UpdateOrderPaymentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.UpdateOrderPaymentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.UpdateOrderPaymentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.updateOrderPayment =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/UpdateOrderPayment',
      request,
      metadata || {},
      methodDescriptor_OrderService_UpdateOrderPayment,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.UpdateOrderPaymentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.UpdateOrderPaymentResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.updateOrderPayment =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/UpdateOrderPayment',
      request,
      metadata || {},
      methodDescriptor_OrderService_UpdateOrderPayment);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.services.ecommerce.v1.orders.CancelOrderRequest,
 *   !proto.services.ecommerce.v1.orders.CancelOrderResponse>}
 */
const methodDescriptor_OrderService_CancelOrder = new grpc.web.MethodDescriptor(
  '/services.ecommerce.v1.orders.OrderService/CancelOrder',
  grpc.web.MethodType.UNARY,
  proto.services.ecommerce.v1.orders.CancelOrderRequest,
  proto.services.ecommerce.v1.orders.CancelOrderResponse,
  /**
   * @param {!proto.services.ecommerce.v1.orders.CancelOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.services.ecommerce.v1.orders.CancelOrderResponse.deserializeBinary
);


/**
 * @param {!proto.services.ecommerce.v1.orders.CancelOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.services.ecommerce.v1.orders.CancelOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.services.ecommerce.v1.orders.CancelOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.services.ecommerce.v1.orders.OrderServiceClient.prototype.cancelOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/CancelOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CancelOrder,
      callback);
};


/**
 * @param {!proto.services.ecommerce.v1.orders.CancelOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.services.ecommerce.v1.orders.CancelOrderResponse>}
 *     Promise that resolves to the response
 */
proto.services.ecommerce.v1.orders.OrderServicePromiseClient.prototype.cancelOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/services.ecommerce.v1.orders.OrderService/CancelOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CancelOrder);
};


module.exports = proto.services.ecommerce.v1.orders;


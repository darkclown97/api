// source: services/movies.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var services_common_pb = require('../services/common_pb.js');
goog.object.extend(proto, services_common_pb);
goog.exportSymbol('proto.services.movies.AddMovieRequest', null, global);
goog.exportSymbol('proto.services.movies.AddMovieResponse', null, global);
goog.exportSymbol('proto.services.movies.DeleteMovieRequest', null, global);
goog.exportSymbol('proto.services.movies.DeleteMovieRequest.ParamsCase', null, global);
goog.exportSymbol('proto.services.movies.DeleteMovieResponse', null, global);
goog.exportSymbol('proto.services.movies.GetMovieRequest', null, global);
goog.exportSymbol('proto.services.movies.GetMovieRequest.ParamsCase', null, global);
goog.exportSymbol('proto.services.movies.GetMovieResponse', null, global);
goog.exportSymbol('proto.services.movies.ListMoviesRequest', null, global);
goog.exportSymbol('proto.services.movies.ListMoviesRequest.FilterBy', null, global);
goog.exportSymbol('proto.services.movies.ListMoviesResponse', null, global);
goog.exportSymbol('proto.services.movies.Movie', null, global);
goog.exportSymbol('proto.services.movies.UpdateMovieRequest', null, global);
goog.exportSymbol('proto.services.movies.UpdateMovieResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.Movie = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.Movie, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.Movie.displayName = 'proto.services.movies.Movie';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.ListMoviesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.ListMoviesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.ListMoviesRequest.displayName = 'proto.services.movies.ListMoviesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.ListMoviesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.movies.ListMoviesResponse.repeatedFields_, null);
};
goog.inherits(proto.services.movies.ListMoviesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.ListMoviesResponse.displayName = 'proto.services.movies.ListMoviesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.AddMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.AddMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.AddMovieRequest.displayName = 'proto.services.movies.AddMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.AddMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.AddMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.AddMovieResponse.displayName = 'proto.services.movies.AddMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.DeleteMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.movies.DeleteMovieRequest.oneofGroups_);
};
goog.inherits(proto.services.movies.DeleteMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.DeleteMovieRequest.displayName = 'proto.services.movies.DeleteMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.DeleteMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.DeleteMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.DeleteMovieResponse.displayName = 'proto.services.movies.DeleteMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.UpdateMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.UpdateMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.UpdateMovieRequest.displayName = 'proto.services.movies.UpdateMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.UpdateMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.UpdateMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.UpdateMovieResponse.displayName = 'proto.services.movies.UpdateMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.GetMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.movies.GetMovieRequest.oneofGroups_);
};
goog.inherits(proto.services.movies.GetMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.GetMovieRequest.displayName = 'proto.services.movies.GetMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.movies.GetMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.movies.GetMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.movies.GetMovieResponse.displayName = 'proto.services.movies.GetMovieResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.Movie.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.Movie.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.Movie} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.Movie.toObject = function(includeInstance, msg) {
  var f, obj = {
    meta: (f = msg.getMeta()) && services_common_pb.Meta.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    genre: jspb.Message.getFieldWithDefault(msg, 3, ""),
    year: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.Movie}
 */
proto.services.movies.Movie.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.Movie;
  return proto.services.movies.Movie.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.Movie} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.Movie}
 */
proto.services.movies.Movie.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_common_pb.Meta;
      reader.readMessage(value,services_common_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGenre(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.Movie.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.Movie.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.Movie} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.Movie.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_common_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGenre();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional services.common.Meta meta = 1;
 * @return {?proto.services.common.Meta}
 */
proto.services.movies.Movie.prototype.getMeta = function() {
  return /** @type{?proto.services.common.Meta} */ (
    jspb.Message.getWrapperField(this, services_common_pb.Meta, 1));
};


/**
 * @param {?proto.services.common.Meta|undefined} value
 * @return {!proto.services.movies.Movie} returns this
*/
proto.services.movies.Movie.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.Movie} returns this
 */
proto.services.movies.Movie.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.Movie.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.movies.Movie.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.Movie} returns this
 */
proto.services.movies.Movie.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string genre = 3;
 * @return {string}
 */
proto.services.movies.Movie.prototype.getGenre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.Movie} returns this
 */
proto.services.movies.Movie.prototype.setGenre = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 year = 4;
 * @return {number}
 */
proto.services.movies.Movie.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.movies.Movie} returns this
 */
proto.services.movies.Movie.prototype.setYear = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.ListMoviesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.ListMoviesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.ListMoviesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.ListMoviesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && services_common_pb.PageOptions.toObject(includeInstance, f),
    searchTerm: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filterBy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    includeDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.ListMoviesRequest}
 */
proto.services.movies.ListMoviesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.ListMoviesRequest;
  return proto.services.movies.ListMoviesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.ListMoviesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.ListMoviesRequest}
 */
proto.services.movies.ListMoviesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_common_pb.PageOptions;
      reader.readMessage(value,services_common_pb.PageOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTerm(value);
      break;
    case 3:
      var value = /** @type {!proto.services.movies.ListMoviesRequest.FilterBy} */ (reader.readEnum());
      msg.setFilterBy(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeDeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.ListMoviesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.ListMoviesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.ListMoviesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.ListMoviesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_common_pb.PageOptions.serializeBinaryToWriter
    );
  }
  f = message.getSearchTerm();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilterBy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getIncludeDeleted();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.services.movies.ListMoviesRequest.FilterBy = {
  NAME: 0,
  GENRE: 1,
  YEAR: 2
};

/**
 * optional services.common.PageOptions options = 1;
 * @return {?proto.services.common.PageOptions}
 */
proto.services.movies.ListMoviesRequest.prototype.getOptions = function() {
  return /** @type{?proto.services.common.PageOptions} */ (
    jspb.Message.getWrapperField(this, services_common_pb.PageOptions, 1));
};


/**
 * @param {?proto.services.common.PageOptions|undefined} value
 * @return {!proto.services.movies.ListMoviesRequest} returns this
*/
proto.services.movies.ListMoviesRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.ListMoviesRequest} returns this
 */
proto.services.movies.ListMoviesRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.ListMoviesRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string search_term = 2;
 * @return {string}
 */
proto.services.movies.ListMoviesRequest.prototype.getSearchTerm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.ListMoviesRequest} returns this
 */
proto.services.movies.ListMoviesRequest.prototype.setSearchTerm = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional FilterBy filter_by = 3;
 * @return {!proto.services.movies.ListMoviesRequest.FilterBy}
 */
proto.services.movies.ListMoviesRequest.prototype.getFilterBy = function() {
  return /** @type {!proto.services.movies.ListMoviesRequest.FilterBy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.services.movies.ListMoviesRequest.FilterBy} value
 * @return {!proto.services.movies.ListMoviesRequest} returns this
 */
proto.services.movies.ListMoviesRequest.prototype.setFilterBy = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool include_deleted = 4;
 * @return {boolean}
 */
proto.services.movies.ListMoviesRequest.prototype.getIncludeDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.movies.ListMoviesRequest} returns this
 */
proto.services.movies.ListMoviesRequest.prototype.setIncludeDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.movies.ListMoviesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.ListMoviesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.ListMoviesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.ListMoviesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.ListMoviesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    moviesList: jspb.Message.toObjectList(msg.getMoviesList(),
    proto.services.movies.Movie.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.ListMoviesResponse}
 */
proto.services.movies.ListMoviesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.ListMoviesResponse;
  return proto.services.movies.ListMoviesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.ListMoviesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.ListMoviesResponse}
 */
proto.services.movies.ListMoviesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.movies.Movie;
      reader.readMessage(value,proto.services.movies.Movie.deserializeBinaryFromReader);
      msg.addMovies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.ListMoviesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.ListMoviesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.ListMoviesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.ListMoviesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoviesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.movies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Movie movies = 1;
 * @return {!Array<!proto.services.movies.Movie>}
 */
proto.services.movies.ListMoviesResponse.prototype.getMoviesList = function() {
  return /** @type{!Array<!proto.services.movies.Movie>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.movies.Movie, 1));
};


/**
 * @param {!Array<!proto.services.movies.Movie>} value
 * @return {!proto.services.movies.ListMoviesResponse} returns this
*/
proto.services.movies.ListMoviesResponse.prototype.setMoviesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.movies.Movie=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.movies.Movie}
 */
proto.services.movies.ListMoviesResponse.prototype.addMovies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.movies.Movie, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.movies.ListMoviesResponse} returns this
 */
proto.services.movies.ListMoviesResponse.prototype.clearMoviesList = function() {
  return this.setMoviesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.AddMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.AddMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.AddMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.AddMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    movie: (f = msg.getMovie()) && proto.services.movies.Movie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.AddMovieRequest}
 */
proto.services.movies.AddMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.AddMovieRequest;
  return proto.services.movies.AddMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.AddMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.AddMovieRequest}
 */
proto.services.movies.AddMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.movies.Movie;
      reader.readMessage(value,proto.services.movies.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.AddMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.AddMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.AddMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.AddMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.movies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional Movie movie = 1;
 * @return {?proto.services.movies.Movie}
 */
proto.services.movies.AddMovieRequest.prototype.getMovie = function() {
  return /** @type{?proto.services.movies.Movie} */ (
    jspb.Message.getWrapperField(this, proto.services.movies.Movie, 1));
};


/**
 * @param {?proto.services.movies.Movie|undefined} value
 * @return {!proto.services.movies.AddMovieRequest} returns this
*/
proto.services.movies.AddMovieRequest.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.AddMovieRequest} returns this
 */
proto.services.movies.AddMovieRequest.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.AddMovieRequest.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.AddMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.AddMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.AddMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.AddMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    movie: (f = msg.getMovie()) && proto.services.movies.Movie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.AddMovieResponse}
 */
proto.services.movies.AddMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.AddMovieResponse;
  return proto.services.movies.AddMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.AddMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.AddMovieResponse}
 */
proto.services.movies.AddMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.movies.Movie;
      reader.readMessage(value,proto.services.movies.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.AddMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.AddMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.AddMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.AddMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.movies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional Movie movie = 1;
 * @return {?proto.services.movies.Movie}
 */
proto.services.movies.AddMovieResponse.prototype.getMovie = function() {
  return /** @type{?proto.services.movies.Movie} */ (
    jspb.Message.getWrapperField(this, proto.services.movies.Movie, 1));
};


/**
 * @param {?proto.services.movies.Movie|undefined} value
 * @return {!proto.services.movies.AddMovieResponse} returns this
*/
proto.services.movies.AddMovieResponse.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.AddMovieResponse} returns this
 */
proto.services.movies.AddMovieResponse.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.AddMovieResponse.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.movies.DeleteMovieRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.movies.DeleteMovieRequest.ParamsCase = {
  PARAMS_NOT_SET: 0,
  ID: 1,
  NAME: 2
};

/**
 * @return {proto.services.movies.DeleteMovieRequest.ParamsCase}
 */
proto.services.movies.DeleteMovieRequest.prototype.getParamsCase = function() {
  return /** @type {proto.services.movies.DeleteMovieRequest.ParamsCase} */(jspb.Message.computeOneofCase(this, proto.services.movies.DeleteMovieRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.DeleteMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.DeleteMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.DeleteMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.DeleteMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.DeleteMovieRequest}
 */
proto.services.movies.DeleteMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.DeleteMovieRequest;
  return proto.services.movies.DeleteMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.DeleteMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.DeleteMovieRequest}
 */
proto.services.movies.DeleteMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.DeleteMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.DeleteMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.DeleteMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.DeleteMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.movies.DeleteMovieRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.DeleteMovieRequest} returns this
 */
proto.services.movies.DeleteMovieRequest.prototype.setId = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.movies.DeleteMovieRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.movies.DeleteMovieRequest} returns this
 */
proto.services.movies.DeleteMovieRequest.prototype.clearId = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.movies.DeleteMovieRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.DeleteMovieRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.movies.DeleteMovieRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.DeleteMovieRequest} returns this
 */
proto.services.movies.DeleteMovieRequest.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.movies.DeleteMovieRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.movies.DeleteMovieRequest} returns this
 */
proto.services.movies.DeleteMovieRequest.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.movies.DeleteMovieRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.DeleteMovieRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.DeleteMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.DeleteMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.DeleteMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.DeleteMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.DeleteMovieResponse}
 */
proto.services.movies.DeleteMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.DeleteMovieResponse;
  return proto.services.movies.DeleteMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.DeleteMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.DeleteMovieResponse}
 */
proto.services.movies.DeleteMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.DeleteMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.DeleteMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.DeleteMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.DeleteMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.UpdateMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.UpdateMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.UpdateMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.UpdateMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    movie: (f = msg.getMovie()) && proto.services.movies.Movie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.UpdateMovieRequest}
 */
proto.services.movies.UpdateMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.UpdateMovieRequest;
  return proto.services.movies.UpdateMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.UpdateMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.UpdateMovieRequest}
 */
proto.services.movies.UpdateMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.movies.Movie;
      reader.readMessage(value,proto.services.movies.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.UpdateMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.UpdateMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.UpdateMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.UpdateMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.movies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional Movie movie = 1;
 * @return {?proto.services.movies.Movie}
 */
proto.services.movies.UpdateMovieRequest.prototype.getMovie = function() {
  return /** @type{?proto.services.movies.Movie} */ (
    jspb.Message.getWrapperField(this, proto.services.movies.Movie, 1));
};


/**
 * @param {?proto.services.movies.Movie|undefined} value
 * @return {!proto.services.movies.UpdateMovieRequest} returns this
*/
proto.services.movies.UpdateMovieRequest.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.UpdateMovieRequest} returns this
 */
proto.services.movies.UpdateMovieRequest.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.UpdateMovieRequest.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.UpdateMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.UpdateMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.UpdateMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.UpdateMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    movie: (f = msg.getMovie()) && proto.services.movies.Movie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.UpdateMovieResponse}
 */
proto.services.movies.UpdateMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.UpdateMovieResponse;
  return proto.services.movies.UpdateMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.UpdateMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.UpdateMovieResponse}
 */
proto.services.movies.UpdateMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.movies.Movie;
      reader.readMessage(value,proto.services.movies.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.UpdateMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.UpdateMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.UpdateMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.UpdateMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.movies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional Movie movie = 1;
 * @return {?proto.services.movies.Movie}
 */
proto.services.movies.UpdateMovieResponse.prototype.getMovie = function() {
  return /** @type{?proto.services.movies.Movie} */ (
    jspb.Message.getWrapperField(this, proto.services.movies.Movie, 1));
};


/**
 * @param {?proto.services.movies.Movie|undefined} value
 * @return {!proto.services.movies.UpdateMovieResponse} returns this
*/
proto.services.movies.UpdateMovieResponse.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.UpdateMovieResponse} returns this
 */
proto.services.movies.UpdateMovieResponse.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.UpdateMovieResponse.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.movies.GetMovieRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.movies.GetMovieRequest.ParamsCase = {
  PARAMS_NOT_SET: 0,
  ID: 1,
  NAME: 2
};

/**
 * @return {proto.services.movies.GetMovieRequest.ParamsCase}
 */
proto.services.movies.GetMovieRequest.prototype.getParamsCase = function() {
  return /** @type {proto.services.movies.GetMovieRequest.ParamsCase} */(jspb.Message.computeOneofCase(this, proto.services.movies.GetMovieRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.GetMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.GetMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.GetMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.GetMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.GetMovieRequest}
 */
proto.services.movies.GetMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.GetMovieRequest;
  return proto.services.movies.GetMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.GetMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.GetMovieRequest}
 */
proto.services.movies.GetMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.GetMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.GetMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.GetMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.GetMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.movies.GetMovieRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.GetMovieRequest} returns this
 */
proto.services.movies.GetMovieRequest.prototype.setId = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.movies.GetMovieRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.movies.GetMovieRequest} returns this
 */
proto.services.movies.GetMovieRequest.prototype.clearId = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.movies.GetMovieRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.GetMovieRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.movies.GetMovieRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.movies.GetMovieRequest} returns this
 */
proto.services.movies.GetMovieRequest.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.movies.GetMovieRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.movies.GetMovieRequest} returns this
 */
proto.services.movies.GetMovieRequest.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.movies.GetMovieRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.GetMovieRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.movies.GetMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.movies.GetMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.movies.GetMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.GetMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    movie: (f = msg.getMovie()) && proto.services.movies.Movie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.movies.GetMovieResponse}
 */
proto.services.movies.GetMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.movies.GetMovieResponse;
  return proto.services.movies.GetMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.movies.GetMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.movies.GetMovieResponse}
 */
proto.services.movies.GetMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.movies.Movie;
      reader.readMessage(value,proto.services.movies.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.movies.GetMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.movies.GetMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.movies.GetMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.movies.GetMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.movies.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional Movie movie = 1;
 * @return {?proto.services.movies.Movie}
 */
proto.services.movies.GetMovieResponse.prototype.getMovie = function() {
  return /** @type{?proto.services.movies.Movie} */ (
    jspb.Message.getWrapperField(this, proto.services.movies.Movie, 1));
};


/**
 * @param {?proto.services.movies.Movie|undefined} value
 * @return {!proto.services.movies.GetMovieResponse} returns this
*/
proto.services.movies.GetMovieResponse.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.movies.GetMovieResponse} returns this
 */
proto.services.movies.GetMovieResponse.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.movies.GetMovieResponse.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.services.movies);
